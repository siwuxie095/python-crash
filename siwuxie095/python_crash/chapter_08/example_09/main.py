"""

小结


在这里，你学习了：如何编写函数，以及如何传递实参，让函数能够访问完成其工作所需的信息；如何使用位置实参
和关键字实参，以及如何接受任意数量的实参；显示输出的函数和返回值的函数；如何将函数同列表、字典、if 语
句和 while 循环结合起来使用；如何将函数存储在称为模块的独立文件中，让程序文件更简单、更易于理解。最后，
你学习了函数编写指南，遵循这些指南可让程序始终结构良好，并对你和其他人来说易于阅读。

程序员的目标之一是，编写简单的代码来完成任务，而函数有助于你实现这样的目标。它们让你编写好代码块并确定
其能够正确运行后，就可置之不理。确定函数能够正确地完成其工作后，你就可以接着投身于下一个编码任务。

函数让你编写代码一次后，想重用它们多少次就重用多少次。需要运行函数中的代码时，只需编写一行函数调用代码，
就可让函数完成其工作。需要修改函数的行为时，只需修改一个代码块，而所做的修改将影响调用这个函数的每个地方。

使用函数让程序更容易阅读，而良好的函数名概述了程序各个部分的作用。相对于阅读一系列的代码块，阅读一系列
函数调用让你能够更快地明白程序的作用。

函数还让代码更容易测试和调试。如果程序使用一系列的函数来完成其任务，而其中的每个函数都完成一项具体的工
作，测试和维护起来将容易得多：可编写分别调用每个函数的程序，并测试每个函数是否在它可能遇到的各种情形下
都能正确地运行。经过这样的测试后你就能充满信心，深信每次调用这些函数时，它们都将正确地运行。

后续你将学习编写类。类将函数和数据整洁地封装起来，让你能够灵活而高效地使用它们。

"""