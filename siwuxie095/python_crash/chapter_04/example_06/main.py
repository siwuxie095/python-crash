"""

设置代码格式


随着你编写的程序越来越长，有必要了解一些代码格式设置约定。请花时间让你的代码尽可能易于阅读。这有助于
你掌握程序是做什么的，也可以帮助他人理解你编写的代码。

为确保所有人编写的代码结构都大致一致，Python 程序员会遵循一些格式设置约定。学会编写整洁的 Python
后，就能明白他人编写的 Python 代码的整体结构——只要他们和你遵循相同的指南。要成为专业程序员，应从
现在开始就遵循这些指南，以养成良好的习惯。



1、格式设置指南

要提出 Python 语言修改建议，需要编写 Python 改进提案（Python Enhancement Proposal，PEP）。
PEP 8 是最古老的 PEP 之一，向 Python 程序员提供了代码格式设置指南。PEP 8 的篇幅很长，但基本上
与复杂的编码结构相关。

Python 格式设置指南的编写者深知，代码被阅读的次数比编写的次数多。代码编写出来后，调试时需要阅读；
给程序添加新功能时，需要花很长的时间阅读；与其他程序员分享代码时，这些程序员也会阅读。

如果一定要在让代码易于编写和易于阅读之间做出选择，Python 程序员几乎总是选择后者。下面的指南可帮助
你从一开始就编写出清晰的代码。



2、缩进

PEP 8 建议每级缩进都使用四个空格。这既可提高可读性，又留下了足够的多级缩进空间。

在字处理文档中，大家常常使用制表符而不是空格来缩进。对于字处理文档来说，这样做的效果很好，但混合使用
制表符和空格会让 Python 解释器感到迷惑。每款文本编辑器都提供了一种设置，可将你输入的制表符转换为指
定数量的空格。你在编写代码时绝对应该使用制表符键，但一定要对编辑器进行设置，使其在文档中插入空格而不
是制表符。

在程序中混合使用制表符和空格可能导致极难排查的问题。如果混合使用了制表符和空格，可将文件中的所有制表
符都转换为空格，大多数编辑器提供了这样的功能。



3、行长

很多 Python 程序员建议每行不超过 80 字符。最初制定这样的指南时，在大多数计算机中，终端窗口每行
只能容纳79字符。当前，计算机屏幕每行可容纳的字符数多得多，为何还要使用 79 字符的标准行长呢？这里
有别的原因。专业程序员通常会在同一个屏幕上打开多个文件，使用标准行长可以让他们在屏幕上并排打开两三
个文件时同时看到各个文件的完整行。PEP 8 还建议注释的行长不应超过 72 字符，因为有些工具为大型项目
自动生成文档时，会在每行注释开头添加格式化字符。

PEP 8 中有关行长的指南并非不可逾越的红线，有些小组将最大行长设置为 99 字符。在学习期间，你不用
过多考虑代码的行长，但别忘了，协作编写程序时，大家几乎都遵守 PEP 8 指南。在大多数编辑器中，可以
设置一个视觉标志（通常是一条竖线），让你知道不能越过的界线在什么地方。



4、空行

要将程序的不同部分分开，可使用空行。你应该使用空行来组织程序文件，但也不能滥用。只要按这里的示例
展示的那样做，就能掌握其中的平衡。例如，如果你有五行创建列表的代码，还有三行处理该列表的代码，那
么用一个空行将这两部分隔开是合适的。然而，你不应使用三四个空行将其隔开。

空行不会影响代码的运行，但会影响代码的可读性。Python 解释器根据水平缩进情况来解读代码，但不关心
垂直间距。



5、其他格式设置指南

PEP 8 还有很多其他的格式设置建议，但这些指南针对的程序大多比目前为止提到的程序复杂。等介绍更复杂
的 Python 结构时，再来分享相关的 PEP 8 指南。

"""