"""

小结


在这里，你学习了：如何使用模块 unittest 中的工具来为函数和类编写测试；如何编写继承 unittest.TestCase 的类，
以及如何编写测试方法，以核实函数和类的行为符合预期；如何使用方法 setUp() 来根据类高效地创建实例并设置其属性，以
便在类的所有测试方法中使用。

测试是很多初学者不熟悉的主题。作为初学者，并非必须为你尝试的所有项目编写测试。然而参与工作量较大的项目时，你应该
对自己所编写函数和类的重要行为进行测试。这样你就能够更加确定自己所做的工作不会破坏项目的其他部分，从而自由地改进
既有代码。如果不小心破坏了原来的功能，你马上就会知道，而且能够轻松地修复问题。比起等到不满意的用户报告 bug 后再
采取措施，在测试未通过时采取措施要容易得多。

如果你在项目中包含了初步测试，将得到其他程序员的尊敬。他们不仅能够更得心应手地使用你编写的代码，也更愿意与你合作
开发项目。如果要跟其他程序员开发的项目共享代码，就必须证明你编写的代码通过了既有测试，通常还需要为你添加的新行为
编写测试。

请通过多开展测试来熟悉代码测试过程。对于自己编写的函数和类，请编写针对其重要行为的测试。不过不要在项目早期试图编
写全覆盖的测试用例，除非有充分的理由。

"""